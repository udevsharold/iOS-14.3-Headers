/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 10:58:07 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <libobjc.A.dylib/SBHIDButtonStateDelegate.h>

@protocol SBHIDValueModifyingButtonSetArbiterDelegate;
@class NSDictionary, BSTimer, SBHIDButtonStateArbiter;

@interface SBHIDValueModifyingButtonSetArbiter : NSObject <SBHIDButtonStateDelegate> {

	NSDictionary* _usageToButtonDictionary;
	NSDictionary* _buttonToUsageDictionary;
	BSTimer* _timer;
	SBHIDButtonStateArbiter* _currentDownButton;
	id<SBHIDValueModifyingButtonSetArbiterDelegate> _delegate;
	double _initialRepeatDelay;
	double _subsequentRepeatDelay;

}

@property (assign,nonatomic) double initialRepeatDelay;                                                    //@synthesize initialRepeatDelay=_initialRepeatDelay - In the implementation block
@property (assign,nonatomic) double subsequentRepeatDelay;                                                 //@synthesize subsequentRepeatDelay=_subsequentRepeatDelay - In the implementation block
@property (assign,nonatomic,__weak) id<SBHIDValueModifyingButtonSetArbiterDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(void)reset;
-(void)dealloc;
-(void)performActionsForButtonUp:(id)arg1 ;
-(void)performActionsForButtonLongPress:(id)arg1 ;
-(void)setDelegate:(id<SBHIDValueModifyingButtonSetArbiterDelegate>)arg1 ;
-(void)performActionsForButtonDown:(id)arg1 ;
-(id<SBHIDValueModifyingButtonSetArbiterDelegate>)delegate;
-(id)initWithHIDKeyPressEventUsages:(id)arg1 initialRepeatDelay:(double)arg2 subsequentRepeatDelay:(double)arg3 ;
-(BOOL)processKeyboardEvent:(IOHIDEventRef)arg1 ;
-(void)_cancelRepeatingActionTimer;
-(void)_performActionForButton:(id)arg1 ;
-(void)_startRepeatingActionTimer;
-(void)_fireRepeatingActionTimer;
-(double)initialRepeatDelay;
-(void)setInitialRepeatDelay:(double)arg1 ;
-(double)subsequentRepeatDelay;
-(void)setSubsequentRepeatDelay:(double)arg1 ;
@end

