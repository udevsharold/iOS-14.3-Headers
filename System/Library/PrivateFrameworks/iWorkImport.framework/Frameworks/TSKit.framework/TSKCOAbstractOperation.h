/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 11:12:00 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/Frameworks/TSKit.framework/TSKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSKit/TSKit-Structs.h>
@class TSUUUIDPath, NSString;

@interface TSKCOAbstractOperation : NSObject {

	vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >* _address;
	BOOL _noop;

}

@property (nonatomic,readonly) BOOL isNoop;                                                         //@synthesize noop=_noop - In the implementation block
@property (nonatomic,readonly) TSUUUIDPath * UUIDPath; 
@property (nonatomic,readonly) const vector<TSU::UUIDData<TSP::UUIDData>* UUIDAddress; 
@property (nonatomic,readonly) NSString * toString; 
+(id)newObjectForUnarchiver:(id)arg1 message:(const Message*)arg2 ;
-(NSString *)toString;
-(unsigned long long)hash;
-(id)description;
-(BOOL)isNoop;
-(BOOL)isEqual:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 message:(Operation*)arg2 ;
-(const vector<TSU::UUIDData<TSP::UUIDData>*)UUIDAddress;
-(id)initWithUnarchiver:(id)arg1 message:(const Operation*)arg2 ;
-(shared_ptr<TSKCO::AbstractOperation>*)newTransformableOperation;
-(void)populateRangeVector:(vector<_NSRange, std::__1::allocator<_NSRange> >*)arg1 fromRangeList:(const RepeatedField<unsigned int>*)arg2 ;
-(void)saveRangeVector:(vector<_NSRange, std::__1::allocator<_NSRange> >*)arg1 rangeList:(RepeatedField<unsigned int>*)arg2 ;
-(id)initWithAddress:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 noop:(BOOL)arg2 ;
-(void)populateAddressFromIdentifier:(const RepeatedField<unsigned long long>*)arg1 ;
-(void)saveAddress:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 identifier:(RepeatedField<unsigned long long>*)arg2 ;
-(TSUUUIDPath *)UUIDPath;
@end

