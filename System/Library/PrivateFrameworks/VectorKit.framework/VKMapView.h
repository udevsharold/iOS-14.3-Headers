/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 11:19:15 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <QuartzCore/CALayer.h>

@protocol VKMapViewDelegate;
@class VKMapCanvas, VKClassicGlobeCanvas, NSString, VKTimedAnimation, VKNotificationObserver, VKPuckAnimator, VKMapCameraController, VKNavCameraController, VKNavContext, MDARController, GEOPOICategoryFilter, VKRouteContext, CADisplay, GEOMapRegion, VKLabelMarker, NSArray, VKPolylineOverlay, VKSceneConfiguration;

@interface VKMapView : CALayer {

	optional<VKMapType> _mapType;
	VKMapCanvas* _canvas;
	VKClassicGlobeCanvas* _globe;
	mutex _mapDelegateMutex;
	id<VKMapViewDelegate> _mapDelegate;
	BOOL _loaderOpen;
	NSString* _tileLoaderClientID;
	unsigned char _emphasis;
	VKTimedAnimation* _edgeInsetAnimation;
	VKEdgeInsets _animatingToEdgeInsets;
	BOOL _isChangingMapType;
	double _verticalYaw;
	unsigned char _applicationState;
	unsigned char _displayedSearchResultsType;
	VKNotificationObserver* _notificationObserver;
	VKPuckAnimator* _userLocationAnimator;
	long long _navigationDisplayRate;
	BOOL _isInBackground;
	VKMapCameraController* _mapCameraController;
	VKNavCameraController* _navigationCameraController;
	retain_ptr<VKMuninCameraController *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>* _muninCameraController;
	VKNavContext* _navContext;
	Coordinate3D<Radians, double> _lastAnimatedUserCoordinate;
	Unit<RadianUnitDescription, double> _lastAnimatedCourse;
	unique_ptr<md::MapEngine, std::__1::default_delete<md::MapEngine> >* _mapEngine;
	BOOL _didFinishSnapshotting;
	int _flyoverMode;
	MDARController* _arController;
	GEOPOICategoryFilter* _pointsOfInterestFilter;
	retain_ptr<VKStateCaptureHandler *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>* _stateCaptureHandler;
	retain_ptr<VKCamera *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>* _camera;
	VKRouteContext* _routeContext;

}

@property (nonatomic,readonly) VKMapCanvas * mapCanvas; 
@property (nonatomic,readonly) const MapEngine* mapEngine; 
@property (nonatomic,readonly) double heading; 
@property (assign,nonatomic) BOOL virtualParallaxEnabled; 
@property (assign,nonatomic) BOOL shouldLoadFallbackTiles; 
@property (assign,nonatomic) BOOL shouldLoadMapMargin; 
@property (assign,nonatomic) id<VKMapViewDelegate> mapDelegate;                                                  //@synthesize mapDelegate=_mapDelegate - In the implementation block
@property (assign,nonatomic) id<VKMapViewCameraDelegate> cameraDelegate; 
@property (assign,nonatomic) BOOL staysCenteredDuringPinch; 
@property (assign,nonatomic) BOOL staysCenteredDuringRotation; 
@property (nonatomic,retain) CADisplay * hostDisplay; 
@property (assign,nonatomic) BOOL isPitchable; 
@property (getter=isPitched,nonatomic,readonly) BOOL pitched; 
@property (getter=isFullyPitched,nonatomic,readonly) BOOL fullyPitched; 
@property (getter=minPitch,nonatomic,readonly) double minPitch; 
@property (getter=maxPitch,nonatomic,readonly) double maxPitch; 
@property (nonatomic,readonly) BOOL canEnter3DMode; 
@property (nonatomic,readonly) BOOL supportsGPUFrameCaptureToDestination; 
@property (getter=isShowingFlyover,nonatomic,readonly) BOOL showingFlyover; 
@property (nonatomic,readonly) BOOL canShowFlyover; 
@property (assign,nonatomic) BOOL trafficEnabled; 
@property (assign,nonatomic) BOOL trafficIncidentsEnabled; 
@property (assign,nonatomic) long long displayRate; 
@property (assign,nonatomic) long long navigationDisplayRate; 
@property (assign,nonatomic) BOOL localizeLabels; 
@property (assign,nonatomic) long long labelScaleFactor; 
@property (nonatomic,readonly) int flyoverMode; 
@property (assign,nonatomic) int mapType; 
@property (assign,nonatomic) SCD_Struct_VK56 mapDisplayStyle; 
@property (assign,nonatomic) float styleZOffsetScale; 
@property (assign,nonatomic) long long targetDisplay; 
@property (assign,nonatomic) SCD_Struct_VK57 vehicleState; 
@property (assign,nonatomic) unsigned char emphasis; 
@property (assign,nonatomic) long long applicationUILayout; 
@property (assign,getter=isLabelMarkerSelectionEnabled,nonatomic) BOOL labelMarkerSelectionEnabled; 
@property (assign,nonatomic) long long shieldSize; 
@property (assign,nonatomic) long long navigationShieldSize; 
@property (assign,nonatomic) long long shieldIdiom; 
@property (assign,nonatomic) BOOL showsRoadLabels; 
@property (assign,nonatomic) BOOL showsPointLabels; 
@property (assign,nonatomic) BOOL showsPointsOfInterest; 
@property (assign,nonatomic) BOOL showsBuildings; 
@property (assign,nonatomic) BOOL showsVenues; 
@property (assign,nonatomic) BOOL loadMuninAvailability; 
@property (nonatomic,retain) GEOPOICategoryFilter * pointsOfInterestFilter;                                      //@synthesize pointsOfInterestFilter=_pointsOfInterestFilter - In the implementation block
@property (nonatomic,readonly) VKPuckAnimator * userLocationAnimator;                                            //@synthesize userLocationAnimator=_userLocationAnimator - In the implementation block
@property (assign,nonatomic) VKEdgeInsets edgeInsets; 
@property (assign,nonatomic) VKEdgeInsets fullyOccludedEdgeInsets; 
@property (assign,nonatomic) VKEdgeInsets labelEdgeInsets; 
@property (nonatomic,readonly) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) double yaw; 
@property (nonatomic,readonly) double presentationYaw; 
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) double altitude; 
@property (nonatomic,readonly) SCD_Struct_VK58 centerCoordinate; 
@property (assign,getter=isGesturing,nonatomic) BOOL gesturing; 
@property (assign,nonatomic) BOOL iconsShouldAlignToPixels; 
@property (getter=isFullyDrawn,nonatomic,readonly) BOOL fullyDrawn; 
@property (getter=getSceneState,nonatomic,readonly) unsigned long long sceneState; 
@property (assign,nonatomic) BOOL trackingCameraShouldHandleGestures; 
@property (assign,nonatomic) double trackingZoomScale; 
@property (assign,nonatomic) SCD_Struct_VK59 annotationTrackingBehavior; 
@property (assign,nonatomic) long long annotationTrackingHeadingAnimationDisplayRate; 
@property (getter=isAnimatingToTrackAnnotation,nonatomic,readonly) BOOL animatingToTrackAnnotation; 
@property (nonatomic,readonly) BOOL canShowFlyoverAnimation; 
@property (nonatomic,readonly) VKLabelMarker * selectedLabelMarker; 
@property (nonatomic,readonly) NSArray * labelMarkers; 
@property (nonatomic,retain) VKPolylineOverlay * focusedLabelsPolyline; 
@property (assign,nonatomic) BOOL rendersInBackground; 
@property (assign,nonatomic) BOOL debugLayoutContinuously; 
@property (nonatomic,readonly) BOOL enableDebugLabelHighlighting; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (assign,nonatomic) unsigned char applicationState;                                                     //@synthesize applicationState=_applicationState - In the implementation block
@property (assign,nonatomic) unsigned char displayedSearchResultsType;                                           //@synthesize displayedSearchResultsType=_displayedSearchResultsType - In the implementation block
@property (nonatomic,readonly) VKSceneConfiguration * sceneConfiguration; 
-(void)_mapkit_configureFromDefaults;
-(void)_mapkit_configureLabelSizesForContentSizeCategory:(id)arg1 ;
-(BOOL)isGesturing;
-(void)setFullyOccludedEdgeInsets:(VKEdgeInsets)arg1 ;
-(void)setNeedsLayout;
-(BOOL)trafficEnabled;
-(BOOL)restoreViewportFromInfo:(id)arg1 ;
-(id<VKMapViewDelegate>)mapDelegate;
-(BOOL)wantsTimerTick;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(const Coordinate3D<Radians, double>*)arg2 ;
-(void)runAnimation:(id)arg1 ;
-(void)setGesturing:(BOOL)arg1 ;
-(void)puckAnimator:(id)arg1 updatedPosition:(const Coordinate3D<Radians, double>*)arg2 course:(const Unit<RadianUnitDescription, double>*)arg3 ;
-(void)didPresent;
-(BOOL)isFullyPitched;
-(double)pitch;
-(void)didEnterBackground;
-(const MapEngine*)mapEngine;
-(VKEdgeInsets)fullyOccludedEdgeInsets;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 ;
-(id)viewportInfo;
-(void)_updateBackgroundColor;
-(int)flyoverMode;
-(void)setShowsBuildings:(BOOL)arg1 ;
-(unsigned char)applicationState;
-(void)setMapDelegate:(id<VKMapViewDelegate>)arg1 ;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(BOOL)canZoomOutForTileSize:(long long)arg1 ;
-(void)setRouteContext:(id)arg1 ;
-(void)didReceiveMemoryWarning;
-(double)altitude;
-(double)yaw;
-(long long)labelScaleFactor;
-(void)setContentsScale:(double)arg1 ;
-(SCD_Struct_VK58)centerCoordinate;
-(void)setLocalizeLabels:(BOOL)arg1 ;
-(void)map:(id)arg1 didEnterARMode:(BOOL)arg2 ;
-(CGPoint)convertMapPoint:(SCD_Struct_VK60)arg1 toPointToLayer:(id)arg2 ;
-(SCD_Struct_VK60)convertPoint:(CGPoint)arg1 toMapPointFromLayer:(id)arg2 ;
-(void)setShowsVenues:(BOOL)arg1 ;
-(double)distanceFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 fromLayer:(id)arg3 withPrecision:(long long)arg4 ;
-(void)prepareFlyoverAnimation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setIsPitchable:(BOOL)arg1 ;
-(void)willStopPanningAtPoint:(CGPoint)arg1 withVelocity:(CGPoint)arg2 ;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2 ;
-(void)removeOverlay:(id)arg1 ;
-(void)enter3DMode;
-(long long)shieldSize;
-(double)maximumZoomLevelForTileSize:(long long)arg1 ;
-(id)muninMarkerAtCoordinate:(SCD_Struct_VK60)arg1 completeMarkerHandler:(/*^block*/id)arg2 ;
-(id)detailedDescription;
-(BOOL)isShowingFlyover;
-(void)resumeFlyoverTourAnimation;
-(BOOL)trafficIncidentsEnabled;
-(void)setTrafficIncidentsEnabled:(BOOL)arg1 ;
-(void)setPointsOfInterestFilter:(GEOPOICategoryFilter *)arg1 ;
-(BOOL)canShowFlyover;
-(BOOL)supportsMapType:(int)arg1 ;
-(void)setEmphasis:(unsigned char)arg1 ;
-(void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)setLabelScaleFactor:(long long)arg1 ;
-(SCD_Struct_VK56)mapDisplayStyle;
-(void)setMapDisplayStyle:(SCD_Struct_VK56)arg1 animated:(BOOL)arg2 ;
-(BOOL)isPitchable;
-(VKPuckAnimator *)userLocationAnimator;
-(long long)displayRate;
-(void)dealloc;
-(BOOL)canEnter3DMode;
-(id)attributionsForCurrentRegion;
-(BOOL)canZoomInForTileSize:(long long)arg1 ;
-(void)setDisplayRate:(long long)arg1 ;
-(GEOMapRegion *)mapRegion;
-(void)setDisableLabels:(BOOL)arg1 ;
-(void)setStaysCenteredDuringPinch:(BOOL)arg1 ;
-(void)stopTrackingAnnotation;
-(BOOL)enableDebugLabelHighlighting;
-(void)debugHighlightLabelAtPoint:(CGPoint)arg1 ;
-(/*^block*/id)annotationCoordinateTest;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(BOOL)arg2 ;
-(BOOL)stylesheetIsDevResource;
-(BOOL)isPitched;
-(BOOL)virtualParallaxEnabled;
-(void)setCameraDelegate:(id<VKMapViewCameraDelegate>)arg1 ;
-(BOOL)iconsShouldAlignToPixels;
-(void)setIconsShouldAlignToPixels:(BOOL)arg1 ;
-(BOOL)isAnimatingToTrackAnnotation;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 timingCurve:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(void)setShieldSize:(long long)arg1 ;
-(double)minPitch;
-(void)setRouteLineSplitAnnotation:(id)arg1 ;
-(void)setShouldLoadFallbackTiles:(BOOL)arg1 ;
-(double)durationToAnimateToMapRegion:(id)arg1 ;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)stopPanningAtPoint:(CGPoint)arg1 ;
-(void)selectLabelMarker:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)exitARMode;
-(void)setMapDisplayStyle:(SCD_Struct_VK56)arg1 ;
-(void)_forceLayoutForSuspensionSnapShot;
-(BOOL)isPointValidForGesturing:(CGPoint)arg1 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 ;
-(id)currentCanvas;
-(id)buildingMarkerAtPoint:(CGPoint)arg1 ;
-(id)featureMarkerAtPoint:(CGPoint)arg1 ;
-(unordered_map<unsigned int, unsigned long long, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long long> > >*)clientStyleAttributes;
-(void)_updateMapDisplayStyle;
-(void)setRegionRestriction:(id)arg1 duration:(double)arg2 timingFunction:(/*^block*/id)arg3 ;
-(void)pauseFlyoverTourAnimation;
-(void)setDisableRoads:(BOOL)arg1 ;
-(void)setShowsPointsOfInterest:(BOOL)arg1 ;
-(BOOL)cancelPendingMove;
-(void)setAnnotationTrackingHeadingAnimationDisplayRate:(long long)arg1 ;
-(void)setApplicationState:(unsigned char)arg1 displayedSearchResultsType:(unsigned char)arg2 ;
-(LabelSettings*)_labelSettings;
-(void)_closeLoaderConnection:(BOOL)arg1 ;
-(BOOL)_createDisplayLayer;
-(BOOL)isEffectivelyHidden;
-(void)setStaysCenteredDuringRotation:(BOOL)arg1 ;
-(BOOL)staysCenteredDuringRotation;
-(void)setDimmingBaseMap:(BOOL)arg1 animated:(BOOL)arg2 duration:(double)arg3 ;
-(id)venueAtLocation:(SCD_Struct_VK60)arg1 withMarginForError:(BOOL)arg2 includeNonRevealedVenues:(BOOL)arg3 ;
-(id)onscreenImageResources;
-(BOOL)staysCenteredDuringPinch;
-(void)setLoadMuninMetadata:(BOOL)arg1 ;
-(void)_postDelegateCallbackBlock:(/*^block*/id)arg1 ;
-(void)_createGlobe;
-(void)performStylesheetDidChange;
-(void)map:(id)arg1 didUpdateVerticalYawTo:(double)arg2 ;
-(void)setMapDisplayStyle:(SCD_Struct_VK56)arg1 animated:(BOOL)arg2 duration:(double)arg3 ;
-(void)activateInternalSettings;
-(BOOL)canShowFlyoverAnimation;
-(void)_notifyDelegateFlyoverTourLabelChanged:(id)arg1 ;
-(void)_runFlyoverTourStateChange:(int)arg1 completion:(/*^block*/id)arg2 ;
-(VKSceneConfiguration *)sceneConfiguration;
-(void)setNavContext:(id)arg1 ;
-(short)displayedFloorOrdinalForVenueBuilding:(id)arg1 ;
-(id)labelMarkerForCustomFeatureAnnotation:(id)arg1 dataSource:(id)arg2 ;
-(long long)annotationTrackingHeadingAnimationDisplayRate;
-(double)currentZoomLevelForTileSize:(long long)arg1 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/id)arg5 ;
-(id)_mapDelegateQueue;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(BOOL)isLabelMarkerSelectionEnabled;
-(void)setVirtualParallaxEnabled:(BOOL)arg1 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(double)heading;
-(id)secondaryCanvas;
-(float)styleZOffsetScale;
-(long long)targetDisplay;
-(SCD_Struct_VK57)vehicleState;
-(long long)applicationUILayout;
-(void)setApplicationUILayout:(long long)arg1 ;
-(long long)navigationDisplayRate;
-(void)setNavigationDisplayRate:(long long)arg1 ;
-(BOOL)debugLayoutContinuously;
-(BOOL)supportsNightMode;
-(void)reloadStylesheet;
-(void)setDebugLayoutContinuously:(BOOL)arg1 ;
-(void)didReceiveFlushTileCaches;
-(void)didReceiveLocalChanged;
-(CADisplay *)hostDisplay;
-(id)debugLabelString:(BOOL)arg1 ;
-(BOOL)shouldLoadFallbackTiles;
-(void)setShouldLoadMapMargin:(BOOL)arg1 ;
-(BOOL)shouldLoadMapMargin;
-(long long)navigationShieldSize;
-(void)setNavigationShieldSize:(long long)arg1 ;
-(long long)shieldIdiom;
-(void)setShieldIdiom:(long long)arg1 ;
-(BOOL)showsVenues;
-(BOOL)isLoadingMuninMetadata;
-(float)worldSpaceWidthOfView;
-(id)venueAtLocation:(SCD_Struct_VK60)arg1 ;
-(void)_setFloorSwitcherZoomPadding:(float)arg1 ;
-(void)setApplicationState:(unsigned char)arg1 ;
-(id)venueAtLocation:(SCD_Struct_VK60)arg1 withMarginForError:(BOOL)arg2 ;
-(void)nearestVenueDidChange:(const Venue*)arg1 building:(const VenueBuilding*)arg2 ;
-(void)venueCreated:(const Venue*)arg1 building:(const VenueBuilding*)arg2 ;
-(void)setClientLocalizedStrings:(id)arg1 ;
-(void)setDesiredMapMode:(long long)arg1 ;
-(void)setCameraFramingInsets:(VKEdgeInsets)arg1 ;
-(id)testStatistics;
-(void)enableTestStatistics;
-(void)disableTestStatistics;
-(void)resetTestStatistics;
-(id)tileStatistics;
-(void)stopTracking;
-(void)pauseTracking;
-(void)setTrackingCameraShouldHandleGestures:(BOOL)arg1 ;
-(void)setLabelExclusionRegions:(id)arg1 ;
-(int)mapType;
-(void)stopSnappingAnimations;
-(void)transitionToTracking:(BOOL)arg1 mapMode:(long long)arg2 startLocation:(SCD_Struct_VK60)arg3 startCourse:(double)arg4 pounceCompletionHandler:(/*^block*/id)arg5 ;
-(BOOL)trackingCameraShouldHandleGestures;
-(void)setExternalTrafficFeatures:(id)arg1 areRouteTrafficFeaturesActive:(BOOL)arg2 ;
-(void)setLabelMarkerSelectionEnabled:(BOOL)arg1 ;
-(void)navigationCameraReturnToPuck;
-(void)addRouteOverlay:(id)arg1 ;
-(BOOL)transitLinesDisabled;
-(BOOL)supportsGPUFrameCaptureToDestination;
-(double)trackingZoomScale;
-(void)setTrackingZoomScale:(double)arg1 ;
-(VKPolylineOverlay *)focusedLabelsPolyline;
-(void)setFocusedLabelsPolyline:(VKPolylineOverlay *)arg1 ;
-(void)didStartLoadingData;
-(void)setMapType:(int)arg1 ;
-(void)addOverlay:(id)arg1 ;
-(void)enterARModeAtCoordinate:(SCD_Struct_VK60)arg1 ;
-(BOOL)canEnter3DModeFlyoverForTileSize:(long long)arg1 ;
-(BOOL)loadMuninAvailability;
-(void)setLoadMuninAvailability:(BOOL)arg1 ;
-(SCD_Struct_VK59)annotationTrackingBehavior;
-(void)setAnnotationTrackingBehavior:(SCD_Struct_VK59)arg1 ;
-(unsigned char)displayedSearchResultsType;
-(void)setDisplayedSearchResultsType:(unsigned char)arg1 ;
-(void)removeRouteOverlay:(id)arg1 ;
-(void)addPersistentRouteOverlay:(id)arg1 ;
-(void)muninJunctionDidChange:(const MuninJunction*)arg1 currentRoad:(const MuninRoadEdge*)arg2 localize:(BOOL)arg3 ;
-(void)didFinishLoadingData;
-(void)didFinishLoadingDataWithError:(id)arg1 ;
-(void)mapDidReloadStylesheet:(id)arg1 ;
-(void)willBecomeFullyDrawn;
-(void)didUpdateSceneStatus:(unsigned char)arg1 ;
-(BOOL)isFullyDrawn;
-(void)labelManagerDidLayout;
-(void)selectedLabelMarkerWillDisappear:(const shared_ptr<md::LabelMarker>*)arg1 ;
-(void)labelMarkerDidChangeState:(const shared_ptr<md::LabelMarker>*)arg1 ;
-(void)map:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2 ;
-(void)mapDidFinishChangingMapDisplayStyle:(SCD_Struct_VK56)arg1 ;
-(void)mapLabelsDidLayout:(id)arg1 ;
-(void)removePersistentRouteOverlay:(id)arg1 ;
-(void)startPanningAtPoint:(CGPoint)arg1 panAtStartPoint:(BOOL)arg2 ;
-(void)setMapType:(int)arg1 animated:(BOOL)arg2 ;
-(void)map:(id)arg1 selectedLabelMarkerWillDisappear:(const shared_ptr<md::LabelMarker>*)arg2 ;
-(void)map:(id)arg1 labelMarkerDidChangeState:(const shared_ptr<md::LabelMarker>*)arg2 ;
-(void)mapController:(id)arg1 requestsDisplayRate:(long long)arg2 ;
-(void)willLayoutWithTimestamp:(double)arg1 withContext:(LayoutContext*)arg2 ;
-(void)setDisablePolygons:(BOOL)arg1 ;
-(void)setDisableGrid:(BOOL)arg1 ;
-(id)venueWithFocus;
-(void)setDisableBuildingFootprints:(BOOL)arg1 ;
-(void)setDisableRasters:(BOOL)arg1 ;
-(BOOL)roadsDisabled;
-(BOOL)labelsDisabled;
-(BOOL)polygonsDisabled;
-(BOOL)buildingFootprintsDisabled;
-(BOOL)rastersDisabled;
-(BOOL)gridDisabled;
-(void)puckAnimator:(id)arg1 runAnimation:(id)arg2 ;
-(CGRect)mapRegionBounds;
-(void)setYaw:(double)arg1 animated:(BOOL)arg2 ;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(VKEdgeInsets)labelEdgeInsets;
-(void)setLabelEdgeInsets:(VKEdgeInsets)arg1 ;
-(id)venueWithID:(unsigned long long)arg1 ;
-(id)pptTileStatisticsForMapType:(int)arg1 latitude:(double)arg2 longitude:(double)arg3 zoom:(float)arg4 width:(double)arg5 height:(double)arg6 rect:(SCD_Struct_VK61)arg7 ;
-(GEOPOICategoryFilter *)pointsOfInterestFilter;
-(void)debugHighlightFeatureMarker:(const shared_ptr<md::FeatureMarker>Ref)arg1 ;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)venueBuildingWithFocus;
-(BOOL)isDimmingBaseMap;
-(void)setDimmingBaseMap:(BOOL)arg1 ;
-(float)zoomToRevealVenueFloorplan:(id)arg1 ;
-(void)renderInContext:(CGContextRef)arg1 ;
-(long long)currentMapMode;
-(float)zoomToRevealVenueBuildingFloorplan:(id)arg1 ;
-(void)setDisplayedFloorOrdinal:(short)arg1 forVenueBuilding:(id)arg2 ;
-(void)setRendersInBackground:(BOOL)arg1 ;
-(id)clearVenueBuildingFloorSelections;
-(BOOL)displayedFloorIsDefaultForVenueBuilding:(id)arg1 ;
-(short)defaultFloorOrdinalForVenueBuilding:(id)arg1 ;
-(id)iconForStyleAttributes:(id)arg1 contentScale:(double)arg2 size:(long long)arg3 transparent:(BOOL)arg4 ;
-(void)setSelectedVenuePoiFeatureId:(unsigned long long)arg1 ;
-(void)deselectVenuePoiFeatureId;
-(void)startFlyoverAnimation:(id)arg1 animateToStart:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)moveToFlyoverTourStartPosition:(id)arg1 duration:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)forceLayout;
-(void)updateRotationWithFocusPoint:(CGPoint)arg1 newValue:(double)arg2 ;
-(void)startFlyoverTourAnimation:(unsigned long long)arg1 animateToStart:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)setFlyoverMode:(int)arg1 ;
-(void)populateDebugNode:(DebugTreeNode*)arg1 withOptions:(const bitset<4>*)arg2 ;
-(void)setCanonicalSkyHeight:(double)arg1 ;
-(void)addExternalAnchor:(id)arg1 ;
-(id)navigationPuck;
-(void)removeExternalAnchor:(id)arg1 ;
-(void)insertOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(double)zoomLevelAdjustmentForTileSize:(long long)arg1 ;
-(void)startRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)arController:(id)arg1 didChangeTrackingState:(unsigned long long)arg2 reason:(unsigned long long)arg3 ;
-(void)arController:(id)arg1 didEncounterError:(id)arg2 ;
-(void)arController:(id)arg1 arSessionWasInterrupted:(unsigned long long)arg2 ;
-(void)arControllerSessionInterruptionEnded:(id)arg1 ;
-(void)setVehicleState:(SCD_Struct_VK57)arg1 ;
-(void)updatePanWithTranslation:(CGPoint)arg1 ;
-(void)startPanningAtPoint:(CGPoint)arg1 ;
-(BOOL)canRotate;
-(void)setBounds:(CGRect)arg1 ;
-(BOOL)localizeLabels;
-(id)transitLineMarkersInCurrentViewport;
-(void)selectTransitLineMarker:(id)arg1 ;
-(void)deselectTransitLineMarker;
-(id)selectedTransitLineIDs;
-(unsigned char)emphasis;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2 ;
-(void)clearScene;
-(double)topDownMinimumZoomLevelForTileSize:(long long)arg1 ;
-(id)detailedDescriptionDictionaryRepresentation;
-(VKMapCanvas *)mapCanvas;
-(void)exit3DMode;
-(void)setTrafficEnabled:(BOOL)arg1 ;
-(BOOL)showsPointLabels;
-(void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4 ;
-(id)roadLabelTilesInScene;
-(VKEdgeInsets)edgeInsets;
-(double)presentationYaw;
-(BOOL)tapAtPoint:(CGPoint)arg1 ;
-(NSArray *)visibleTileSets;
-(id)transitLineMarkersForSelectionAtPoint:(CGPoint)arg1 ;
-(void)stopFlyoverAnimation;
-(BOOL)showsBuildings;
-(void)setDisableTransitLines:(BOOL)arg1 ;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1 ;
-(id)initShouldRasterize:(BOOL)arg1 inBackground:(BOOL)arg2 contentScale:(double)arg3 auditToken:(id)arg4 ;
-(void)forceCameraUpdateForFrameResize;
-(void)forceFrame;
-(void)enableViewDataLoading:(BOOL)arg1 ;
-(BOOL)showsRoadLabels;
-(void)setShowsRoadLabels:(BOOL)arg1 ;
-(BOOL)rendersInBackground;
-(void)setCenterCoordinate:(SCD_Struct_VK60)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(id)currentMarker;
-(void)enterMuninForStorefrontView:(id)arg1 secondaryStorefrontView:(id)arg2 ;
-(void)enterMuninForMarker:(id)arg1 withHeading:(double)arg2 ;
-(void)setARInterfaceOrientation:(long long)arg1 ;
-(BOOL)showsPointsOfInterest;
-(VKLabelMarker *)selectedLabelMarker;
-(unsigned long long)getSceneState;
-(BOOL)moveToMarker:(id)arg1 withHeading:(double)arg2 animated:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)consoleString:(BOOL)arg1 ;
-(BOOL)moveToStorefrontView:(id)arg1 animated:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)openLoaderConnection;
-(void)deselectLabelMarker;
-(id)labelMarkerForCustomFeatureAnnotation:(id)arg1 ;
-(void)addCustomFeatureDataSource:(id)arg1 ;
-(void)removeCustomFeatureDataSource:(id)arg1 ;
-(/*^block*/id)annotationRectTest;
-(void)setSelectedFeatureId:(unsigned long long)arg1 ;
-(void)deselectFeatureId;
-(void)closeLoaderConnection;
-(void)flushTileLoads;
-(void)didFinishSnapshotting;
-(SCD_Struct_VK60)convertPoint:(CGPoint)arg1 toCoordinateFromLayer:(id)arg2 ;
-(CGPoint)convertCoordinate:(SCD_Struct_VK60)arg1 toPointToLayer:(id)arg2 ;
-(CGPoint)convertCoordinate:(SCD_Struct_VK60)arg1 toCameraModelPointToLayer:(id)arg2 ;
-(void)setStyleZOffsetScale:(float)arg1 ;
-(void)setTargetDisplay:(long long)arg1 ;
-(void)setHostDisplay:(CADisplay *)arg1 ;
-(NSArray *)labelMarkers;
-(id<VKMapViewCameraDelegate>)cameraDelegate;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3 duration:(double)arg4 timingFunction:(/*^block*/id)arg5 ;
-(void)willEnterForeground;
-(void)stopRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)setCenterCoordinateDistanceRange:(SCD_Struct_VK60)arg1 duration:(double)arg2 timingFunction:(/*^block*/id)arg3 ;
-(double)minimumZoomLevelForTileSize:(long long)arg1 ;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(float)currentZoomLevel;
-(void)setShowsPointLabels:(BOOL)arg1 ;
-(BOOL)shouldHideOffscreenSelectedAnnotation;
-(double)maxPitch;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)setHidden:(BOOL)arg1 ;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 degrees:(double)arg2 ;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)selectLabelMarker:(id)arg1 ;
-(id)muninMarkerAtCoordinate:(SCD_Struct_VK60)arg1 ;
-(void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3 ;
@end

