/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 11:19:15 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MDRenderTarget, MDMapControllerDelegate;
#import <VectorKit/VectorKit-Structs.h>
@class VKCameraController, ARSession;

@interface VKScreenCanvas : NSObject {

	MapEngine* _mapEngine;
	RunLoopController* _runLoopController;
	AnimationRunner* _animationRunner;
	shared_ptr<md::TaskContext>* _taskContext;
	retain_ptr<VKCamera *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>* _camera;
	id<MDRenderTarget> _displayTarget;
	BOOL _userIsGesturing;
	VKCameraController* _cameraController;
	VKEdgeInsets _edgeInsets;
	VKEdgeInsets _fullyOccludedEdgeInsets;
	BOOL _deallocing;
	Renderer* _mapRenderer;
	LayoutContext* _layoutContext;
	id<MDMapControllerDelegate> _mapDelegate;
	PerspectiveView<double> _view;
	ARSession* _arSession;

}

@property (assign,nonatomic) retain_ptr<VKCamera * camera;                         //@synthesize camera=_camera - In the implementation block
@property (nonatomic,readonly) MapEngine* mapEngine;                               //@synthesize mapEngine=_mapEngine - In the implementation block
@property (assign,nonatomic) VKEdgeInsets edgeInsets; 
@property (assign,nonatomic) VKEdgeInsets fullyOccludedEdgeInsets;                 //@synthesize fullyOccludedEdgeInsets=_fullyOccludedEdgeInsets - In the implementation block
@property (assign,nonatomic) id<MDMapControllerDelegate> mapDelegate;              //@synthesize mapDelegate=_mapDelegate - In the implementation block
@property (assign,getter=isGesturing,nonatomic) BOOL gesturing; 
-(BOOL)isGesturing;
-(void)setFullyOccludedEdgeInsets:(VKEdgeInsets)arg1 ;
-(retain_ptr<VKCamera *)camera;
-(void)transferStateFromCanvas:(id)arg1 ;
-(void)enterARSessionAtCoordinate:(CGSize)arg1 ;
-(BOOL)restoreViewportFromInfo:(id)arg1 ;
-(void)setCamera:(retain_ptr<VKCamera *)arg1 ;
-(id)cameraController;
-(id)initWithMapEngine:(MapEngine*)arg1 inBackground:(BOOL)arg2 ;
-(id<MDMapControllerDelegate>)mapDelegate;
-(BOOL)wantsTimerTick;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(const Coordinate3D<Radians, double>*)arg2 ;
-(void)runAnimation:(id)arg1 ;
-(void)setGesturing:(BOOL)arg1 ;
-(void)puckAnimator:(id)arg1 updatedPosition:(const Coordinate3D<Radians, double>*)arg2 course:(const Unit<RadianUnitDescription, double>*)arg3 ;
-(void)didPresent;
-(void)cameraController:(id)arg1 requestsDisplayRate:(long long)arg2 ;
-(void)setCameraController:(id)arg1 ;
-(void)exitARSession;
-(MapEngine*)mapEngine;
-(long long)tileSize;
-(void)didReceiveMemoryWarning:(BOOL)arg1 beAggressive:(BOOL)arg2 ;
-(VKEdgeInsets)fullyOccludedEdgeInsets;
-(shared_ptr<md::FeatureMarker>*)featureMarkerAtScreenPoint:(CGPoint)arg1 ;
-(void)updateCameraForFrameResize;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 ;
-(id)viewportInfo;
-(void)setMapDelegate:(id<MDMapControllerDelegate>)arg1 ;
-(void)setContentsScale:(double)arg1 ;
-(void)dealloc;
-(VKEdgeInsets)edgeInsets;
-(void)updateWithTimestamp:(double)arg1 withContext:(LayoutContext*)arg2 ;
@end

