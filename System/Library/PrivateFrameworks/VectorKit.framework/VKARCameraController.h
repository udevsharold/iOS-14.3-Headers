/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 11:19:15 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKScreenCameraController.h>
#import <libobjc.A.dylib/VKGesturingCameraController.h>

@class VKTimedAnimation, NSString;

@interface VKARCameraController : VKScreenCameraController <VKGesturingCameraController> {

	shared_ptr<md::TaskContext>* _taskContext;
	GlobeView* _globeView;
	MapEngine* _mapEngine;
	double _currentZoomLevel;
	double _maxZoomLevel;
	double _height;
	double _altitudeOffset;
	Unit<RadianUnitDescription, double> _fovy;
	RigidTransform<double, double> _offsetTransform;
	CameraFrame<geo::Radians, double> _cameraFrame;
	RigidTransform<double, double> _baseTransform;
	RigidTransform<double, double> _arTransform;
	RigidTransform<double, double> _currentARTransform;
	RigidTransform<double, double> _lastARTransform;
	Quaternion<double> _arOrientation;
	VKTimedAnimation* _transitionAnimation;
	long long _interfaceOrientation;
	Quaternion<double> _interfaceOrientationRotation;
	Coordinate2D<Radians, double> _currentCoordinate;
	BOOL _overrideARFieldOfView;
	Unit<DegreeUnitDescription, double> _fieldOfView;

}

@property (assign,nonatomic) MapEngine* mapEngine;                                //@synthesize mapEngine=_mapEngine - In the implementation block
@property (assign,nonatomic) GlobeView* globeView;                                //@synthesize globeView=_globeView - In the implementation block
@property (assign,nonatomic) Unit<DegreeUnitDescription fieldOfView;              //@synthesize fieldOfView=_fieldOfView - In the implementation block
@property (assign,nonatomic) BOOL overrideARFieldOfView;                          //@synthesize overrideARFieldOfView=_overrideARFieldOfView - In the implementation block
@property (nonatomic,readonly) float heightScale; 
@property (assign,nonatomic) RigidTransform<double offsetTransform;               //@synthesize offsetTransform=_offsetTransform - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)restoreViewportFromInfo:(id)arg1 ;
-(void)setCamera:(id)arg1 ;
-(BOOL)isFullyPitched;
-(double)pitch;
-(MapEngine*)mapEngine;
-(long long)tileSize;
-(id)viewportInfo;
-(double)altitude;
-(double)topDownMinimumZoomLevel;
-(CGSize)centerCoordinate;
-(void)updateWithTimestamp:(double)arg1 ;
-(void)dealloc;
-(Geocentric<double>)cameraPosition;
-(id)mapRegion;
-(BOOL)isPitched;
-(double)minPitch;
-(Unit<DegreeUnitDescription)fieldOfView;
-(CameraFrame<geo::Radians, double>)cameraFrame;
-(GlobeView*)globeView;
-(void)trasitionToARModeFromCameraFrame:(const CameraFrame<geo::Radians, double>*)arg1 withDuration:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateCameraFrameFromARTransform;
-(double)heading;
-(void)setYaw:(double)arg1 animated:(BOOL)arg2 ;
-(void)setMaxZoomLevel:(double)arg1 ;
-(void)updateGlobeFromCamera;
-(void)_updateBaseTransform;
-(RigidTransform<double, double>)_transformFromARCamera:(id)arg1 ;
-(void)_updateARContext;
-(void)updateWithARSession:(id)arg1 ;
-(Matrix<double, 3, 1>)_intersectAndResolveWorldCollision:(const RigidTransform<double, double>*)arg1 ;
-(void)_setupPounceAnimation:(const Coordinate3D<Radians, double>*)arg1 duration:(double)arg2 completion:(/*^block*/id)arg3 ;
-(id)initWithTaskContext:(shared_ptr<md::TaskContext>*)arg1 mapDataAccess:(MapDataAccessRef)arg2 animationRunner:(AnimationRunner*)arg3 runLoopController:(RunLoopController*)arg4 cameraDelegate:(id)arg5 ;
-(double)_fovAdjustment;
-(void)setCurrentZoomLevel:(double)arg1 ;
-(void)trasitionToARModeAtCoordinate:(CGSize)arg1 withDuration:(double)arg2 completion:(/*^block*/id)arg3 ;
-(RigidTransform<double, double>)arCameraTransform;
-(float)heightScale;
-(void)arSessionWasInterrupted:(unsigned long long)arg1 ;
-(void)setGlobeView:(GlobeView*)arg1 ;
-(void)setMapEngine:(MapEngine*)arg1 ;
-(BOOL)overrideARFieldOfView;
-(void)setOverrideARFieldOfView:(BOOL)arg1 ;
-(RigidTransform<double)offsetTransform;
-(void)setOffsetTransform:(RigidTransform<double)arg1 ;
-(void)setFieldOfView:(Unit<DegreeUnitDescription)arg1 ;
-(double)minimumZoomLevel;
-(double)presentationYaw;
-(double)distanceFromCenterCoordinate;
-(double)currentZoomLevel;
-(double)maxPitch;
-(double)maximumZoomLevel;
@end

