/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 10:54:11 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NewsCore/FCOperation.h>
#import <libobjc.A.dylib/FCOfflineFetchOperationType.h>

@protocol OS_dispatch_queue, FCContentContext, FCFlintHelper;
@class NSObject, NSString, FCThreadSafeMutableArray, FCCachePolicy;

@interface FCOfflineIssueFetchOperation : FCOperation <FCOfflineFetchOperationType> {

	BOOL cachedOnly;
	/*^block*/id archiveHandler;
	NSObject*<OS_dispatch_queue> archiveQueue;
	/*^block*/id fetchCompletionHandler;
	NSObject*<OS_dispatch_queue> fetchCompletionQueue;
	/*^block*/id progressHandler;
	NSObject*<OS_dispatch_queue> progressQueue;
	double _progress;
	id<FCContentContext> _context;
	id<FCFlintHelper> _flintHelper;
	NSString* _issueID;
	FCThreadSafeMutableArray* _resultInterestTokens;
	FCCachePolicy* _issueRecordCachePolicy;

}

@property (assign) double progress;                                                          //@synthesize progress=_progress - In the implementation block
@property (nonatomic,retain) id<FCContentContext> context;                                   //@synthesize context=_context - In the implementation block
@property (nonatomic,retain) id<FCFlintHelper> flintHelper;                                  //@synthesize flintHelper=_flintHelper - In the implementation block
@property (nonatomic,copy) NSString * issueID;                                               //@synthesize issueID=_issueID - In the implementation block
@property (nonatomic,readonly) FCThreadSafeMutableArray * resultInterestTokens;              //@synthesize resultInterestTokens=_resultInterestTokens - In the implementation block
@property (nonatomic,retain) FCCachePolicy * issueRecordCachePolicy;                         //@synthesize issueRecordCachePolicy=_issueRecordCachePolicy - In the implementation block
@property (assign,nonatomic) BOOL cachedOnly; 
@property (nonatomic,copy) id progressHandler; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> progressQueue; 
@property (nonatomic,copy) id archiveHandler; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> archiveQueue; 
@property (nonatomic,copy) id fetchCompletionHandler; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> fetchCompletionQueue; 
-(void)operationWillFinishWithError:(id)arg1 ;
-(BOOL)validateOperation;
-(void)performOperation;
-(BOOL)cachedOnly;
-(void)resetForRetry;
-(void)setArchiveHandler:(id)arg1 ;
-(id)init;
-(void)setCachedOnly:(BOOL)arg1 ;
-(id<FCFlintHelper>)flintHelper;
-(NSString *)issueID;
-(void)setProgressHandler:(id)arg1 ;
-(id)_promiseIssue;
-(id)initWithContext:(id)arg1 flintHelper:(id)arg2 issueID:(id)arg3 ;
-(id)_promiseMetadataForIssue:(id)arg1 ;
-(id)_promiseCoverImageForIssue:(id)arg1 ;
-(id)_promiseANFArticlesForIssue:(id)arg1 ;
-(id)_promiseANFPagesForIssue:(id)arg1 ;
-(id)_promisePDFPagesForIssue:(id)arg1 ;
-(void)setIssueRecordCachePolicy:(FCCachePolicy *)arg1 ;
-(void)setFlintHelper:(id<FCFlintHelper>)arg1 ;
-(FCCachePolicy *)issueRecordCachePolicy;
-(id)_promiseANFArticlesForArticleIDs:(id)arg1 withDownloadProgressMin:(double)arg2 downloadProgressMax:(double)arg3 ;
-(id)_itemIdentifiersForKey:(id)arg1 fromMetadataJSONData:(id)arg2 ;
-(id)_promiseReplicaAdPagesForIssue:(id)arg1 withDownloadProgressMin:(double)arg2 downloadProgressMax:(double)arg3 ;
-(id)_resourceIDsFromMetadataJSONData:(id)arg1 ;
-(id)_pdfArchiveURLForIssue:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)fetchCompletionQueue;
-(id)initWithContext:(id)arg1 flintHelper:(id)arg2 issue:(id)arg3 ;
-(void)setFetchCompletionQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setContext:(id<FCContentContext>)arg1 ;
-(void)_handleArchive:(id)arg1 ;
-(FCThreadSafeMutableArray *)resultInterestTokens;
-(void)_handleInterestToken:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)archiveQueue;
-(void)setProgressQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setArchiveQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setProgress:(double)arg1 ;
-(id)progressHandler;
-(id)fetchCompletionHandler;
-(void)_updateProgress:(double)arg1 ;
-(void)setFetchCompletionHandler:(id)arg1 ;
-(double)progress;
-(unsigned long long)maxRetries;
-(id)archiveHandler;
-(BOOL)canRetryWithError:(id)arg1 retryAfter:(id*)arg2 ;
-(id<FCContentContext>)context;
-(NSObject*<OS_dispatch_queue>)progressQueue;
-(void)setIssueID:(NSString *)arg1 ;
@end

