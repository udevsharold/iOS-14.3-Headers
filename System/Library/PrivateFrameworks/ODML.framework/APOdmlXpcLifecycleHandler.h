/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 11:33:06 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/ODML.framework/ODML
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_xpc_object;
@class NSObject, NSString, NSDate, NSOperationQueue;

@interface APOdmlXpcLifecycleHandler : NSObject {

	BOOL _performDeferralCheck;
	NSObject*<OS_xpc_object> _xpc_activity;
	NSString* _requestIdentifier;
	NSDate* _startDate;
	NSOperationQueue* _workQueue;

}

@property (assign,nonatomic) BOOL performDeferralCheck;                          //@synthesize performDeferralCheck=_performDeferralCheck - In the implementation block
@property (nonatomic,retain) NSDate * startDate;                                 //@synthesize startDate=_startDate - In the implementation block
@property (nonatomic,retain) NSOperationQueue * workQueue;                       //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_xpc_object> xpc_activity;              //@synthesize xpc_activity=_xpc_activity - In the implementation block
@property (nonatomic,copy,readonly) NSString * requestIdentifier;                //@synthesize requestIdentifier=_requestIdentifier - In the implementation block
@property (nonatomic,readonly) BOOL shouldDefer; 
-(BOOL)taskIsDeferred;
-(void)setWorkQueue:(NSOperationQueue *)arg1 ;
-(void)setPerformDeferralCheck:(BOOL)arg1 ;
-(BOOL)shouldDefer;
-(BOOL)finishTask;
-(BOOL)performDeferralCheck;
-(NSOperationQueue *)workQueue;
-(void)endBackgroundDeferralCheck;
-(NSString *)requestIdentifier;
-(BOOL)taskIsContinuing;
-(BOOL)taskCanContinueForTime:(id)arg1 ;
-(BOOL)deferTask;
-(void)_backgroundDeferralCheck:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)initWithActivity:(id)arg1 ;
-(void)startBackgroundDeferralCheckForTime:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(NSDate *)startDate;
-(BOOL)continueTask;
-(void)setStartDate:(NSDate *)arg1 ;
-(NSObject*<OS_xpc_object>)xpc_activity;
-(void)setXpc_activity:(NSObject*<OS_xpc_object>)arg1 ;
@end

