/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 10:56:18 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/Home.framework/Home
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AVAudioPlayerDelegate.h>

@protocol HFAudioPlayerDelegate;
@class NSNumber, NSURL, AVAudioPlayer, AVAudioSession, CADisplayLink, NSString;

@interface HFAudioPlayer : NSObject <AVAudioPlayerDelegate> {

	BOOL _paused;
	BOOL _audioSessionIsActive;
	unsigned long long _playerStopSource;
	NSNumber* _routeChangeReason;
	NSURL* _audioFileURL;
	AVAudioPlayer* _audioPlayer;
	AVAudioSession* _audioSession;
	double _playerCurrentTime;
	unsigned long long _audioSessionOptions;
	CADisplayLink* _displayLink;
	id<HFAudioPlayerDelegate> _delegate;

}

@property (nonatomic,retain) NSURL * audioFileURL;                                               //@synthesize audioFileURL=_audioFileURL - In the implementation block
@property (nonatomic,retain) AVAudioPlayer * audioPlayer;                                        //@synthesize audioPlayer=_audioPlayer - In the implementation block
@property (nonatomic,retain) AVAudioSession * audioSession;                                      //@synthesize audioSession=_audioSession - In the implementation block
@property (assign,getter=isAudioSessionActive,nonatomic) BOOL audioSessionIsActive;              //@synthesize audioSessionIsActive=_audioSessionIsActive - In the implementation block
@property (assign,nonatomic) double playerCurrentTime;                                           //@synthesize playerCurrentTime=_playerCurrentTime - In the implementation block
@property (assign,nonatomic) unsigned long long audioSessionOptions;                             //@synthesize audioSessionOptions=_audioSessionOptions - In the implementation block
@property (nonatomic,retain) CADisplayLink * displayLink;                                        //@synthesize displayLink=_displayLink - In the implementation block
@property (assign,getter=isPaused,nonatomic) BOOL paused;                                        //@synthesize paused=_paused - In the implementation block
@property (assign,nonatomic,__weak) id<HFAudioPlayerDelegate> delegate;                          //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) unsigned long long playerStopSource;                                //@synthesize playerStopSource=_playerStopSource - In the implementation block
@property (nonatomic,retain) NSNumber * routeChangeReason;                                       //@synthesize routeChangeReason=_routeChangeReason - In the implementation block
@property (getter=isPlaying,nonatomic,readonly) BOOL playing; 
@property (nonatomic,readonly) double duration; 
@property (assign,nonatomic) float volume; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(void)_deregisterAudioSessionObservers;
-(BOOL)_configureAudioSession:(id*)arg1 ;
-(void)_registerAudioSessionObservers;
-(void)_displayLinkUpdated:(id)arg1 ;
-(void)_pauseWithReason:(id)arg1 ;
-(void)setPlayerStopSource:(unsigned long long)arg1 ;
-(id)initWithAudioFileURL:(id)arg1 audioSessionOptions:(unsigned long long)arg2 delegate:(id)arg3 ;
-(void)updateAudioFileURL:(id)arg1 ;
-(BOOL)prepareToPlay:(id*)arg1 ;
-(unsigned long long)playerStopSource;
-(void)setRouteChangeReason:(NSNumber *)arg1 ;
-(void)setDisplayLink:(CADisplayLink *)arg1 ;
-(void)pause;
-(void)_deactivateAudioSession;
-(void)_cleanup;
-(double)playerCurrentTime;
-(void)dealloc;
-(void)play;
-(void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2 ;
-(BOOL)isPlaying;
-(void)setPaused:(BOOL)arg1 ;
-(CADisplayLink *)displayLink;
-(BOOL)isAudioSessionActive;
-(BOOL)isPaused;
-(AVAudioPlayer *)audioPlayer;
-(void)setAudioPlayer:(AVAudioPlayer *)arg1 ;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2 ;
-(void)audioSessionMediaServicesWereLost:(id)arg1 ;
-(void)audioSessionMediaServicesWereReset:(id)arg1 ;
-(void)setAudioFileURL:(NSURL *)arg1 ;
-(NSURL *)audioFileURL;
-(NSNumber *)routeChangeReason;
-(void)setAudioSession:(AVAudioSession *)arg1 ;
-(void)setAudioSessionOptions:(unsigned long long)arg1 ;
-(void)setDelegate:(id<HFAudioPlayerDelegate>)arg1 ;
-(unsigned long long)audioSessionOptions;
-(AVAudioSession *)audioSession;
-(double)duration;
-(void)stop;
-(id<HFAudioPlayerDelegate>)delegate;
-(id)_audioSessionCategory;
-(unsigned long long)_audioSessionCategoryOptions;
-(void)resume;
-(void)_stopWithoutAudioSessionDeactivation;
-(void)audioSessionDidInterrupt:(id)arg1 ;
-(void)audioSessionRouteChanged:(id)arg1 ;
-(void)setPlayerCurrentTime:(double)arg1 ;
-(void)setAudioSessionIsActive:(BOOL)arg1 ;
@end

