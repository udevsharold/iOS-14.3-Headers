/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 10:56:20 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/Home.framework/Home
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/HMCameraRecordingEventManagerObserver.h>
#import <libobjc.A.dylib/HFCameraClipPlayerDelegate.h>
#import <libobjc.A.dylib/HFCameraLiveStreamControllerDelegate.h>

@protocol HFCameraLiveStreamControlling, HFCameraClipScrubbing, OS_dispatch_queue, HFCameraClipPlaying;
@class HMCameraProfile, HMCameraSource, NSError, HMHome, NSMapTable, NADelegateDispatcher, NSDate, NSObject, HFCameraAnalyticsCameraClipPlaybackSessionEvent, HFCameraPlaybackEngineCache, HMCameraClipManager, NSUUID, NSArray, HMCameraClip, AVPlayer, HFCameraPlaybackPosition, NSString;

@interface HFCameraPlaybackEngine : NSObject <HMCameraRecordingEventManagerObserver, HFCameraClipPlayerDelegate, HFCameraLiveStreamControllerDelegate> {

	BOOL _prefersAudioEnabled;
	BOOL _microphoneEnabled;
	BOOL _streamAudioEnabled;
	BOOL _userScrubbing;
	BOOL _pictureInPictureModeActive;
	BOOL _shouldBypassVideoFetchRequest;
	BOOL _wantsToPlay;
	BOOL _scrubbing;
	float _streamAudioVolume;
	unsigned long long _timelineState;
	HMCameraProfile* _cameraProfile;
	HMCameraSource* _liveCameraSource;
	unsigned long long _timeControlStatus;
	NSError* _playbackError;
	HMHome* _home;
	/*^block*/id _clipPlayerBuilder;
	id<HFCameraLiveStreamControlling> _liveStreamController;
	id<HFCameraClipScrubbing> _clipScrubber;
	NSMapTable* _observerStates;
	NADelegateDispatcher* _observerDispatcher;
	unsigned long long _playbackContentType;
	unsigned long long _engineMode;
	NSDate* _lastRequestedClipPlaybackDate;
	unsigned long long _scrubbingInProgressCount;
	NSObject*<OS_dispatch_queue> _clipQueue;
	long long _lastPlayerTimeControlStatus;
	HFCameraAnalyticsCameraClipPlaybackSessionEvent* _playbackSessionEvent;
	unsigned long long _playbackRetryAttempts;
	HFCameraPlaybackEngineCache* _eventCache;
	HMCameraClipManager* _clipManager;
	NSUUID* _notificationCenterClipUUID;
	id<HFCameraClipPlaying> _clipPlayer;

}

@property (nonatomic,retain) HMHome * home;                                                                       //@synthesize home=_home - In the implementation block
@property (nonatomic,copy,readonly) id clipPlayerBuilder;                                                         //@synthesize clipPlayerBuilder=_clipPlayerBuilder - In the implementation block
@property (nonatomic,readonly) id<HFCameraLiveStreamControlling> liveStreamController;                            //@synthesize liveStreamController=_liveStreamController - In the implementation block
@property (nonatomic,readonly) id<HFCameraClipScrubbing> clipScrubber;                                            //@synthesize clipScrubber=_clipScrubber - In the implementation block
@property (nonatomic,readonly) NSMapTable * observerStates;                                                       //@synthesize observerStates=_observerStates - In the implementation block
@property (nonatomic,readonly) NADelegateDispatcher * observerDispatcher;                                         //@synthesize observerDispatcher=_observerDispatcher - In the implementation block
@property (assign,nonatomic) unsigned long long playbackContentType;                                              //@synthesize playbackContentType=_playbackContentType - In the implementation block
@property (assign,nonatomic) unsigned long long engineMode;                                                       //@synthesize engineMode=_engineMode - In the implementation block
@property (nonatomic,copy) NSDate * lastRequestedClipPlaybackDate;                                                //@synthesize lastRequestedClipPlaybackDate=_lastRequestedClipPlaybackDate - In the implementation block
@property (assign,nonatomic) BOOL wantsToPlay;                                                                    //@synthesize wantsToPlay=_wantsToPlay - In the implementation block
@property (assign,nonatomic) unsigned long long timeControlStatus;                                                //@synthesize timeControlStatus=_timeControlStatus - In the implementation block
@property (nonatomic,retain) NSError * playbackError;                                                             //@synthesize playbackError=_playbackError - In the implementation block
@property (nonatomic,retain) HMCameraSource * liveCameraSource;                                                   //@synthesize liveCameraSource=_liveCameraSource - In the implementation block
@property (assign,nonatomic) unsigned long long scrubbingInProgressCount;                                         //@synthesize scrubbingInProgressCount=_scrubbingInProgressCount - In the implementation block
@property (assign,getter=isScrubbing,nonatomic) BOOL scrubbing;                                                   //@synthesize scrubbing=_scrubbing - In the implementation block
@property (nonatomic,retain) HMCameraProfile * cameraProfile;                                                     //@synthesize cameraProfile=_cameraProfile - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> clipQueue;                                              //@synthesize clipQueue=_clipQueue - In the implementation block
@property (assign,nonatomic) long long lastPlayerTimeControlStatus;                                               //@synthesize lastPlayerTimeControlStatus=_lastPlayerTimeControlStatus - In the implementation block
@property (nonatomic,retain) HFCameraAnalyticsCameraClipPlaybackSessionEvent * playbackSessionEvent;              //@synthesize playbackSessionEvent=_playbackSessionEvent - In the implementation block
@property (assign,nonatomic) unsigned long long playbackRetryAttempts;                                            //@synthesize playbackRetryAttempts=_playbackRetryAttempts - In the implementation block
@property (nonatomic,retain) HFCameraPlaybackEngineCache * eventCache;                                            //@synthesize eventCache=_eventCache - In the implementation block
@property (assign,nonatomic,__weak) HMCameraClipManager * clipManager;                                            //@synthesize clipManager=_clipManager - In the implementation block
@property (nonatomic,retain) NSUUID * notificationCenterClipUUID;                                                 //@synthesize notificationCenterClipUUID=_notificationCenterClipUUID - In the implementation block
@property (nonatomic,readonly) id<HFCameraClipPlaying> clipPlayer;                                                //@synthesize clipPlayer=_clipPlayer - In the implementation block
@property (nonatomic,copy,readonly) NSArray * observers; 
@property (assign,nonatomic) unsigned long long timelineState;                                                    //@synthesize timelineState=_timelineState - In the implementation block
@property (assign,getter=isUserScrubbing,nonatomic) BOOL userScrubbing;                                           //@synthesize userScrubbing=_userScrubbing - In the implementation block
@property (nonatomic,readonly) HMCameraClip * currentClip; 
@property (nonatomic,readonly) AVPlayer * player; 
@property (nonatomic,copy,readonly) NSArray * cameraEvents; 
@property (nonatomic,copy,readonly) NSArray * cameraClips; 
@property (nonatomic,copy,readonly) NSArray * datesContainingClips; 
@property (assign,getter=isMicrophoneEnabled,nonatomic) BOOL microphoneEnabled;                                   //@synthesize microphoneEnabled=_microphoneEnabled - In the implementation block
@property (assign,getter=isStreamAudioEnabled,nonatomic) BOOL streamAudioEnabled;                                 //@synthesize streamAudioEnabled=_streamAudioEnabled - In the implementation block
@property (assign,nonatomic) float streamAudioVolume;                                                             //@synthesize streamAudioVolume=_streamAudioVolume - In the implementation block
@property (assign,nonatomic) BOOL prefersAudioEnabled;                                                            //@synthesize prefersAudioEnabled=_prefersAudioEnabled - In the implementation block
@property (assign,getter=isPictureInPictureModeActive,nonatomic) BOOL pictureInPictureModeActive;                 //@synthesize pictureInPictureModeActive=_pictureInPictureModeActive - In the implementation block
@property (assign,nonatomic) BOOL shouldBypassVideoFetchRequest;                                                  //@synthesize shouldBypassVideoFetchRequest=_shouldBypassVideoFetchRequest - In the implementation block
@property (nonatomic,readonly) BOOL hasRecordingEvents; 
@property (nonatomic,readonly) BOOL isCameraPortraitMode; 
@property (nonatomic,retain) HFCameraPlaybackPosition * playbackPosition; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned long long)hf_indexOfClipForDate:(id)arg1 inEvents:(id)arg2 enumerationOptions:(unsigned long long)arg3 searchOptions:(unsigned long long)arg4 ;
+(id)findClipPositionForDate:(id)arg1 inEvents:(id)arg2 options:(unsigned long long)arg3 ;
-(BOOL)isScrubbing;
-(id)shortDebugDescription;
-(void)pause;
-(void)setClipManager:(HMCameraClipManager *)arg1 ;
-(id)init;
-(HMCameraProfile *)cameraProfile;
-(void)setPlaybackPosition:(HFCameraPlaybackPosition *)arg1 ;
-(void)setLastPlayerTimeControlStatus:(long long)arg1 ;
-(void)setLiveCameraSource:(HMCameraSource *)arg1 ;
-(id)engineModeDescription;
-(id)timeControlStatusDescription;
-(void)updateLiveStreamForCameraProfile:(id)arg1 ;
-(void)fetchCameraEventsWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchCameraClipForNotificationUUID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)startPlaybackAtDate:(id)arg1 withClip:(id)arg2 ;
-(void)addObserver:(id)arg1 withOptions:(id)arg2 ;
-(void)modifyPlaybackFromSender:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(unsigned long long)timelineState;
-(void)setTimelineState:(unsigned long long)arg1 ;
-(void)setShouldBypassVideoFetchRequest:(BOOL)arg1 ;
-(BOOL)hasRecordingEvents;
-(BOOL)isCameraPortraitMode;
-(BOOL)isLiveStreamPlaying;
-(BOOL)isFirstEventOfTheDay:(id)arg1 ;
-(id)firstOfTheDayClipForDate:(id)arg1 ;
-(id)findClipPositionForDate:(id)arg1 ;
-(id)findClipPositionForDate:(id)arg1 options:(unsigned long long)arg2 ;
-(BOOL)isUserScrubbing;
-(void)setUserScrubbing:(BOOL)arg1 ;
-(void)setPictureInPictureModeActive:(BOOL)arg1 ;
-(void)setEngineMode:(unsigned long long)arg1 ;
-(NSObject*<OS_dispatch_queue>)clipQueue;
-(void)setClipQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(HMHome *)home;
-(void)removeObserver:(id)arg1 ;
-(NSArray *)observers;
-(void)dealloc;
-(void)play;
-(AVPlayer *)player;
-(void)setTimeControlStatus:(unsigned long long)arg1 ;
-(void)updateConfiguration:(id)arg1 ;
-(HFCameraPlaybackEngineCache *)eventCache;
-(NSArray *)cameraEvents;
-(NSArray *)cameraClips;
-(NSArray *)datesContainingClips;
-(void)beginScrubbing;
-(void)endScrubbing;
-(void)setMicrophoneEnabled:(BOOL)arg1 ;
-(void)setScrubbing:(BOOL)arg1 ;
-(BOOL)isMicrophoneEnabled;
-(BOOL)isStreamAudioEnabled;
-(float)streamAudioVolume;
-(void)streamControllerStateDidUpdate:(id)arg1 ;
-(HMCameraSource *)liveCameraSource;
-(void)setStreamAudioEnabled:(BOOL)arg1 ;
-(void)setStreamAudioVolume:(float)arg1 ;
-(id<HFCameraClipPlaying>)clipPlayer;
-(BOOL)prefersAudioEnabled;
-(void)_setupLiveStreamController:(id)arg1 ;
-(void)_updateStateForRequestedPlaybackPosition:(id)arg1 notifyObservers:(BOOL)arg2 ;
-(NSMapTable *)observerStates;
-(void)_setupTimeObservationForObserver:(id)arg1 ;
-(NADelegateDispatcher *)observerDispatcher;
-(void)_setupClipPlayerWithClipManager:(id)arg1 ;
-(void)setNotificationCenterClipUUID:(NSUUID *)arg1 ;
-(void)setEventCache:(HFCameraPlaybackEngineCache *)arg1 ;
-(unsigned long long)playbackContentType;
-(id)initWithConfiguration:(id)arg1 ;
-(NSError *)playbackError;
-(void)setHome:(HMHome *)arg1 ;
-(NSDate *)lastRequestedClipPlaybackDate;
-(void)updatePlaybackPositionToDate:(id)arg1 usingClip:(id)arg2 ;
-(void)setWantsToPlay:(BOOL)arg1 ;
-(NSUUID *)notificationCenterClipUUID;
-(unsigned long long)scrubbingInProgressCount;
-(void)setScrubbingInProgressCount:(unsigned long long)arg1 ;
-(void)_setPlayerVolume:(float)arg1 notifyObservers:(BOOL)arg2 ;
-(void)_setMicrophoneEnabled:(BOOL)arg1 notifyObservers:(BOOL)arg2 ;
-(void)_setStreamAudioEnabled:(BOOL)arg1 notifyObservers:(BOOL)arg2 ;
-(id)timelineStateDescription;
-(HFCameraAnalyticsCameraClipPlaybackSessionEvent *)playbackSessionEvent;
-(HMCameraClip *)currentClip;
-(void)setPlaybackSessionEvent:(HFCameraAnalyticsCameraClipPlaybackSessionEvent *)arg1 ;
-(void)setLastRequestedClipPlaybackDate:(NSDate *)arg1 ;
-(void)_updatePlaybackStateNotifyingObservers:(BOOL)arg1 ;
-(void)setPlaybackRetryAttempts:(unsigned long long)arg1 ;
-(BOOL)wantsToPlay;
-(id)_derivedPlaybackError;
-(void)_updatePlaybackStateNotifyingObservers:(BOOL)arg1 rebuildClipPlayerIfNeeded:(BOOL)arg2 ;
-(BOOL)isPictureInPictureModeActive;
-(void)startPlaybackForCurrentClip;
-(unsigned long long)_derivedTimeControlStatus;
-(void)setPlaybackError:(NSError *)arg1 ;
-(void)setPlaybackContentType:(unsigned long long)arg1 ;
-(BOOL)shouldBypassVideoFetchRequest;
-(unsigned long long)engineMode;
-(long long)lastPlayerTimeControlStatus;
-(unsigned long long)playbackRetryAttempts;
-(void)setPrefersAudioEnabled:(BOOL)arg1 ;
-(id)clipPlayerBuilder;
-(id<HFCameraLiveStreamControlling>)liveStreamController;
-(id<HFCameraClipScrubbing>)clipScrubber;
-(void)setCameraProfile:(HMCameraProfile *)arg1 ;
-(HFCameraPlaybackPosition *)playbackPosition;
-(BOOL)isLiveStreaming;
-(void)clipPlayer:(id)arg1 didUpdateError:(id)arg2 isFatal:(BOOL)arg3 ;
-(void)clipPlayer:(id)arg1 didUpdateTimeControlStatus:(long long)arg2 ;
-(void)clipPlayer:(id)arg1 didUpdateMuted:(BOOL)arg2 ;
-(void)clipPlayerDidPlayToEndTime:(id)arg1 ;
-(HMCameraClipManager *)clipManager;
-(void)recordingEventManager:(id)arg1 didUpdateRecordingEvents:(id)arg2 ;
-(void)recordingEventManager:(id)arg1 didRemoveRecordingEventsWithUUIDs:(id)arg2 ;
-(unsigned long long)timeControlStatus;
@end

