/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, March 2, 2021 at 10:59:56 AM US Time
* Operating System: Version 14.3 (Build 18C66)
* Image Source: /System/Library/PrivateFrameworks/ActivityAchievementsDaemon.framework/ActivityAchievementsDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/ACHTemplateSource.h>

@class NSDate, NSCalendar, ACHMonthlyChallengeDataSource, ACHMonthlyChallengeTemplateDataProvider, ACHSyncingMonthlyChallengeTemplateCache, NSString;

@interface ACHMonthlyChallengeTemplateSource : NSObject <ACHTemplateSource> {

	NSDate* _currentDateOverride;
	NSCalendar* _currentCalendarOverride;
	BOOL _isAppleWatch;
	NSCalendar* _currentCalendar;
	NSDate* _currentDate;
	ACHMonthlyChallengeDataSource* _dataSource;
	ACHMonthlyChallengeTemplateDataProvider* _templateDataProvider;
	ACHSyncingMonthlyChallengeTemplateCache* _templateCache;

}

@property (nonatomic,retain) NSCalendar * currentCalendar;                                                //@synthesize currentCalendar=_currentCalendar - In the implementation block
@property (nonatomic,retain) NSDate * currentDate;                                                        //@synthesize currentDate=_currentDate - In the implementation block
@property (nonatomic,retain) ACHMonthlyChallengeDataSource * dataSource;                                  //@synthesize dataSource=_dataSource - In the implementation block
@property (nonatomic,retain) ACHMonthlyChallengeTemplateDataProvider * templateDataProvider;              //@synthesize templateDataProvider=_templateDataProvider - In the implementation block
@property (nonatomic,retain) ACHSyncingMonthlyChallengeTemplateCache * templateCache;                     //@synthesize templateCache=_templateCache - In the implementation block
@property (assign,nonatomic) BOOL isAppleWatch;                                                           //@synthesize isAppleWatch=_isAppleWatch - In the implementation block
@property (nonatomic,readonly) NSString * identifier; 
@property (nonatomic,readonly) long long runCadence; 
@property (assign,nonatomic,__weak) NSObject*<ACHTemplateSourceDelegate> delegate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)isAppleWatch;
-(NSDate *)currentDate;
-(void)setDataSource:(ACHMonthlyChallengeDataSource *)arg1 ;
-(void)setIsAppleWatch:(BOOL)arg1 ;
-(NSString *)identifier;
-(void)setCurrentDate:(NSDate *)arg1 ;
-(NSCalendar *)currentCalendar;
-(ACHMonthlyChallengeDataSource *)dataSource;
-(BOOL)sourceShouldRunForDate:(id)arg1 ;
-(void)templatesForDate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)localizationBundleURLForTemplate:(id)arg1 ;
-(id)resourceBundleURLForTemplate:(id)arg1 ;
-(id)propertyListBundleURLForTemplate:(id)arg1 ;
-(id)stickerBundleURLForTemplate:(id)arg1 ;
-(long long)runCadence;
-(void)templatesForDate:(id)arg1 databaseContext:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)customPlaceholderValuesForTemplate:(id)arg1 ;
-(id)_monthlyAchievementsAssetsDirectoryBasePath;
-(id)_modelsDirectoryBasePathForTemplate:(id)arg1 ;
-(void)setCurrentCalendar:(NSCalendar *)arg1 ;
-(void)setCurrentDateOverride:(id)arg1 ;
-(void)setCurrentCalendarOverride:(id)arg1 ;
-(BOOL)_shouldOverrideMonthlyChallengeCadence;
-(BOOL)_isInFirstWeekOfCurrentMonth:(id)arg1 ;
-(ACHMonthlyChallengeTemplateDataProvider *)templateDataProvider;
-(ACHSyncingMonthlyChallengeTemplateCache *)templateCache;
-(id)_dateComponentIntervalForCurrentMonth;
-(long long)_monthlyChallengeTemplateSourceActionForDate:(id)arg1 existingTemplate:(id)arg2 ;
-(BOOL)_createMonthlyChallengeWithMonthDateInterval:(id)arg1 monthlyChallengeTemplates:(id*)arg2 error:(id*)arg3 ;
-(void)_removeMonthlyChallengeTemplate:(id)arg1 monthlyChallengeTemplates:(id*)arg2 templatesToRemove:(id*)arg3 ;
-(void)_didOverrideMonthlyChallengeCadence;
-(unsigned long long)_getRandomMonthlyChallengeType;
-(double)_goalValueForCurrentMonthForType:(unsigned long long)arg1 ;
-(id)_createMonthlyChallengeTemplateWithType:(unsigned long long)arg1 dateCompoonentInterval:(id)arg2 goalValue:(double)arg3 ;
-(id)_suffixForCurrentMonthForType:(unsigned long long)arg1 template:(id)arg2 ;
-(id)_yearMonthStringFromTemplateName:(id)arg1 ;
-(id)_dateComponentIntervalForLastMonth;
-(double)_targetGoalValueForCurrentMonthForType:(unsigned long long)arg1 ;
-(id)_maximumValueForMonthlyChallengeType:(unsigned long long)arg1 ;
-(BOOL)isGoalValueForMonthlyChallengeTypeValid:(unsigned long long)arg1 ;
-(BOOL)isMonthlyChallengeOfTypeAvailable:(unsigned long long)arg1 ;
-(id)_availableMonthlyChallengeTypes;
-(id)_dateComponentIntervalForTwoMonthsAgo;
-(double)_roundedGoalValue:(double)arg1 monthlyChallengeType:(unsigned long long)arg2 ;
-(id)possibleLocalizationSuffixesForTemplate:(id)arg1 ;
-(unsigned long long)_numberOfDaysInMonthForDate:(id)arg1 ;
-(id)initWithDataSource:(id)arg1 dataProvider:(id)arg2 templateCache:(id)arg3 ;
-(BOOL)subObjectsHaveDatabaseAssertions;
-(void)setTemplateDataProvider:(ACHMonthlyChallengeTemplateDataProvider *)arg1 ;
-(void)setTemplateCache:(ACHSyncingMonthlyChallengeTemplateCache *)arg1 ;
@end

